<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.mybatisplus.mapper.UserMapper">
    <!-- autoMapping="true" 是默认的，表示自动映射，如果设置为false，只会映射手动配置值   -->
    <resultMap id="userMap" type="User" autoMapping="true">
        <id column="id" property="id"/>
        <result column="online_time" property="onlineTime"
                typeHandler="TimeConvertHandler"/>
    </resultMap>

    <select id="getOne" resultMap="userMap">
        select * from  `user` where id=#{id}

    </select>

    <select id="selectByCondition" resultType="user">
        select * from  `user`
        <where>
            <if test="name!=null &amp;&amp;name!=''">
                and name like concat('%',#{map.name},'%')
            </if>
            <if test="email!=null and email!=''">
                and email like concat('%',#{map.email},'%')
            </if>
        </where>
    </select>

    <select id="selectByConditionV2" resultType="user">
        select * from  `user`
        <where>
            <if test="map.name!=null &amp;&amp; map.name!=''">
                and name like concat('%',#{map.name},'%')
            </if>
            <if test="map.email!=null and map.email!=''">
                and email like concat('%',#{map.email},'%')
            </if>
        </where>
    </select>

    <update id="batchUpdateUser2">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update `user`
            <set>
                <if test="item.email != null and item.email != ''">
                    email = #{item.email},
                </if>
                <if test="item.age != null and item.age != ''">
                    age = #{item.age},
                </if>
            </set>
            where id = #{item.id}
        </foreach>
    </update>

    <update id="batchUpdateUser3" parameterType="java.util.List">
        update `user`
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="email =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.email!=null and i.email!= ''">
                        when id=#{i.id} then #{i.email}
                    </if>
                </foreach>
            </trim>
            <trim prefix="age =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.age!=null">
                        when id=#{i.id} then #{i.age}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index">
            id=#{i.id}
        </foreach>
    </update>

    <insert id="batchAddUser">
        INSERT INTO `user`(`id`, `name`, `age`, `sex`, `email`, `status`, `is_del`, `create_time`)
        VALUES
        <foreach collection="userList" item="user" separator=",">
            (#{user.id},#{user.name},#{user.age},#{user.sex},#{user.email},#{user.status},#{user.isDel},#{user.createTime})
        </foreach>
    </insert>

    <insert id="batchAddUser2">
        <foreach collection="userList" item="user" separator=";">
            INSERT INTO `user`(`id`, `name`, `age`, `sex`, `email`, `status`, `is_del`, `create_time`)
            VALUES
            (#{user.id},#{user.name},#{user.age},#{user.sex},#{user.email},#{user.status},#{user.isDel},#{user.createTime})
        </foreach>
    </insert>

    <insert id="insertUser" parameterType="com.aaa.mybatisplus.domain.entity.User">
        INSERT INTO `user`(`id`, `name`, `age`, `sex`, `email`, `status`,  `is_del`, `create_time`, `online_time`)
        VALUES (#{id},#{name},#{age},#{sex},#{email},#{status},#{isDel},#{createTime},#{onlineTime,typeHandler=com.aaa.mybatisplus.config.typeHandler.TimeConvertHandler})
    </insert>

    <!--
    常用于insert、update语句中
    trim属性主要有以下四个：
    prefix：在trim标签内sql语句加上前缀
    suffix：在trim标签内sql语句加上后缀
    prefixOverrides：指定去除多余的前缀内容，如：prefixOverrides=“AND | OR”，去除trim标签内sql语句多余的前缀"and"或者"or"。
    suffixOverrides：指定去除多余的后缀内容。
    -->
    <update id="updateUserByCondition" parameterType="hashmap">
        update `user` set
        <trim suffixOverrides=",">
            <if test="name !=null and name !='' ">
                name = #{name} ,
            </if>
            <if test="email !=null and email !='' ">
                email = #{email},
            </if>
            <if test="age !=null and age !=0 ">
                age = #{age},
            </if>
        </trim>
        where id=#{id}

    </update>
</mapper>
